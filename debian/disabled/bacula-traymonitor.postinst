#!/bin/sh
# postinst script for bacula
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.

SRCDIR="/usr/share/bacula-common/defconfig"
DSTDIR="/etc/bacula"
CONFIG="tray-monitor.conf"

. /usr/share/bacula-common/common-functions.dpkg
readOrCreatePasswords

case "$1" in
    configure)

        if [ ! -f $DSTDIR/$CONFIG ]; then
            TARGET=$DSTDIR/$CONFIG
        else
            TARGET=$DSTDIR/$CONFIG.dist
        fi

	sed -e s~@debian_hostname@~`hostname`~ \
	-e s~XXX_MONDIRPASSWORD_XXX~$DIRMPASSWD~ \
	-e s~XXX_MONFDPASSWORD_XXX~$FDMPASSWD~ \
	-e s~XXX_MONSDPASSWORD_XXX~$SDMPASSWD~ \
		< $SRCDIR/$CONFIG > $TARGET

        chown root:bacula $TARGET
        chmod 640 $TARGET

    ;;

    abort-upgrade|abort-remove|abort-deconfigure)

    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


